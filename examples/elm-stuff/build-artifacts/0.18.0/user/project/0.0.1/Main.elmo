var _user$project$Main$example3 = '\n#### Simple function\n\n$$f(n) = n^5 + 4n^2 + 2 |_{n=17}$$\n\n#### Case function\n\n\n$$\n f(n) =\n  \\begin{cases}\n    n/2       & \\quad \\text{if } n \\text{ is even}\\\\\n    -(n+1)/2  & \\quad \\text{if } n \\text{ is odd}\n \\end{cases}\n\n $$\n\n#### Integral\n$$\n\\int_0^\\infty \\mathrm{e}^{-x}\\,\\mathrm{d}x\n$$\n\n';
var _user$project$Main$example2 = '\n#### Simple matrix\n\n$$\n\\begin{matrix}\n  a & b & c \\\\\n  d & e & f \\\\\n  g & h & i\n \\end{matrix}\n$$\n\n';
var _user$project$Main$example1 = '\n### Markdown Math\n\nTex math **scriptscriptstyle** $$\\scriptscriptstyle \\int_{0}^{\\infty} e^{-x} dx$$\n\nTex math **scriptstyle** $$\\scriptstyle \\int_{0}^{\\infty} e^{-x} dx$$\n\nTex math **textstyle (default)** $$ \\int_{0}^{\\infty} e^{-x} dx$$\n\nTex math **textstyle** $$\\textstyle \\int_{0}^{\\infty} e^{-x} dx$$\n\nTex math **displaystyle** $$\\displaystyle \\int_{0}^{\\infty} e^{-x} dx$$\n\n\n#### math  with color\n$$\n \\color{red}{\nx^2-3 \\over x+1 }+123\n\n $$\n\n#### limit\n$$\n\\displaystyle\\lim_{x \\to \\infty} e^{-x} = 0\n $$\n\n\n';
var _user$project$Main$renderMessage = function (model) {
	return A2(
		_debois$elm_mdl$Material_Card$view,
		{
			ctor: '::',
			_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
			_1: {
				ctor: '::',
				_0: _debois$elm_mdl$Material_Elevation$e8,
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_debois$elm_mdl$Material_Card$text,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_tazzo$elm_markdown_math$MarkdownMath$toHtml,
						{ctor: '[]'},
						model.text),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$header = function (model) {
	return {
		ctor: '::',
		_0: A2(
			_debois$elm_mdl$Material_Layout$row,
			{
				ctor: '::',
				_0: A2(_debois$elm_mdl$Material_Options$css, 'transition', 'height 333ms ease-in-out 0s'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_debois$elm_mdl$Material_Layout$title,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Elm Markdown Math - Demo'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	};
};
var _user$project$Main$initModel = function () {
	var app = _pairshaped$elm_firebase$Firebase$init(
		{apiKey: 'AIzaSyCYC8DiqgnpH5ea1FEwVAewNT-mBHB0-6U', authDomain: 'elm-firebase-try01.firebaseapp.com', databaseURL: 'https://elm-firebase-try01.firebaseio.com', projectId: 'elm-firebase-try01', storageBucket: 'elm-firebase-try01.appspot.com', messagingSenderId: '747855250165'});
	var db = _pairshaped$elm_firebase$Firebase_Database$init(app);
	return {mdl: _debois$elm_mdl$Material$model, text: _user$project$Main$example1, app: app, db: db, onText: 'init'};
}();
var _user$project$Main$Model = F5(
	function (a, b, c, d, e) {
		return {mdl: a, text: b, app: c, db: d, onText: e};
	});
var _user$project$Main$FooValue = function (a) {
	return {ctor: 'FooValue', _0: a};
};
var _user$project$Main$InputChange = function (a) {
	return {ctor: 'InputChange', _0: a};
};
var _user$project$Main$Mdl = function (a) {
	return {ctor: 'Mdl', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Mdl':
				return A3(_debois$elm_mdl$Material$update, _user$project$Main$Mdl, _p0._0, model);
			case 'InputChange':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{text: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				var value = A2(
					_elm_lang$core$Debug$log,
					'FooValue.value.result',
					A2(
						_elm_lang$core$Json_Decode$decodeValue,
						_elm_lang$core$Json_Decode$string,
						_pairshaped$elm_firebase$Firebase_Database_Snapshot$value(_p0._0)));
				var str = function () {
					var _p1 = value;
					if (_p1.ctor === 'Ok') {
						return _p1._0;
					} else {
						return _p1._0;
					}
				}();
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{onText: str}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$button1 = function (model) {
	return A5(
		_debois$elm_mdl$Material_Button$render,
		_user$project$Main$Mdl,
		{
			ctor: '::',
			_0: 2,
			_1: {
				ctor: '::',
				_0: 1,
				_1: {ctor: '[]'}
			}
		},
		model.mdl,
		{
			ctor: '::',
			_0: _debois$elm_mdl$Material_Button$ripple,
			_1: {
				ctor: '::',
				_0: _debois$elm_mdl$Material_Options$onClick(
					_user$project$Main$InputChange(_user$project$Main$example1)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Markdown Math'),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$button2 = function (model) {
	return A5(
		_debois$elm_mdl$Material_Button$render,
		_user$project$Main$Mdl,
		{
			ctor: '::',
			_0: 2,
			_1: {
				ctor: '::',
				_0: 2,
				_1: {ctor: '[]'}
			}
		},
		model.mdl,
		{
			ctor: '::',
			_0: _debois$elm_mdl$Material_Button$ripple,
			_1: {
				ctor: '::',
				_0: _debois$elm_mdl$Material_Options$onClick(
					_user$project$Main$InputChange(_user$project$Main$example2)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Matrix'),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$button3 = function (model) {
	return A5(
		_debois$elm_mdl$Material_Button$render,
		_user$project$Main$Mdl,
		{
			ctor: '::',
			_0: 2,
			_1: {
				ctor: '::',
				_0: 3,
				_1: {ctor: '[]'}
			}
		},
		model.mdl,
		{
			ctor: '::',
			_0: _debois$elm_mdl$Material_Button$ripple,
			_1: {
				ctor: '::',
				_0: _debois$elm_mdl$Material_Options$onClick(
					_user$project$Main$InputChange(_user$project$Main$example3)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(model.onText),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$examplesList = function (model) {
	return {
		ctor: '::',
		_0: A2(
			_debois$elm_mdl$Material_Layout$title,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Examples'),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: _user$project$Main$button1(model),
			_1: {
				ctor: '::',
				_0: _user$project$Main$button2(model),
				_1: {
					ctor: '::',
					_0: _user$project$Main$button3(model),
					_1: {ctor: '[]'}
				}
			}
		}
	};
};
var _user$project$Main$drawer = function (model) {
	return {
		ctor: '::',
		_0: A2(
			_debois$elm_mdl$Material_Layout$navigation,
			{ctor: '[]'},
			_user$project$Main$examplesList(model)),
		_1: {
			ctor: '::',
			_0: A2(
				_debois$elm_mdl$Material_Layout$navigation,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_debois$elm_mdl$Material_Layout$title,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Github'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_debois$elm_mdl$Material_Layout$link,
							{
								ctor: '::',
								_0: _debois$elm_mdl$Material_Layout$href('https://github.com/tazzo/elm-markdown-math'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('elm-markdown-math'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_debois$elm_mdl$Material_Layout$link,
								{
									ctor: '::',
									_0: _debois$elm_mdl$Material_Layout$href('https://github.com/tazzo/elm-markdown-math-demo'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('demo'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		}
	};
};
var _user$project$Main$tf = function (model) {
	return A5(
		_debois$elm_mdl$Material_Textfield$render,
		_user$project$Main$Mdl,
		{
			ctor: '::',
			_0: 0,
			_1: {
				ctor: '::',
				_0: 9,
				_1: {ctor: '[]'}
			}
		},
		model.mdl,
		{
			ctor: '::',
			_0: A2(_debois$elm_mdl$Material_Options$css, 'width', '100%'),
			_1: {
				ctor: '::',
				_0: A2(_debois$elm_mdl$Material_Options$css, 'padding-left', '10px'),
				_1: {
					ctor: '::',
					_0: A2(_debois$elm_mdl$Material_Options$css, 'padding-right', '10px'),
					_1: {
						ctor: '::',
						_0: _debois$elm_mdl$Material_Textfield$label('Enter Markdown and Math here'),
						_1: {
							ctor: '::',
							_0: _debois$elm_mdl$Material_Textfield$floatingLabel,
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Textfield$textarea,
								_1: {
									ctor: '::',
									_0: _debois$elm_mdl$Material_Textfield$rows(20),
									_1: {
										ctor: '::',
										_0: _debois$elm_mdl$Material_Textfield$value(model.text),
										_1: {
											ctor: '::',
											_0: _debois$elm_mdl$Material_Options$onInput(_user$project$Main$InputChange),
											_1: {
												ctor: '::',
												_0: _debois$elm_mdl$Material_Color$background(_debois$elm_mdl$Material_Color$white),
												_1: {
													ctor: '::',
													_0: _debois$elm_mdl$Material_Elevation$e8,
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		},
		{ctor: '[]'});
};
var _user$project$Main$viewBody = function (model) {
	return A2(
		_debois$elm_mdl$Material_Grid$grid,
		{
			ctor: '::',
			_0: _debois$elm_mdl$Material_Color$background(
				A2(_debois$elm_mdl$Material_Color$color, _debois$elm_mdl$Material_Color$Grey, _debois$elm_mdl$Material_Color$S100)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_debois$elm_mdl$Material_Grid$cell,
				{
					ctor: '::',
					_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 8),
					_1: {
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Desktop, 6),
						_1: {
							ctor: '::',
							_0: _debois$elm_mdl$Material_Grid$stretch,
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: _user$project$Main$renderMessage(model),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_debois$elm_mdl$Material_Grid$cell,
					{
						ctor: '::',
						_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$All, 8),
						_1: {
							ctor: '::',
							_0: A2(_debois$elm_mdl$Material_Grid$size, _debois$elm_mdl$Material_Grid$Desktop, 6),
							_1: {
								ctor: '::',
								_0: _debois$elm_mdl$Material_Grid$stretch,
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: _user$project$Main$tf(model),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$view = function (model) {
	return A4(
		_debois$elm_mdl$Material_Layout$render,
		_user$project$Main$Mdl,
		model.mdl,
		{
			ctor: '::',
			_0: _debois$elm_mdl$Material_Layout$fixedHeader,
			_1: {
				ctor: '::',
				_0: _debois$elm_mdl$Material_Layout$fixedDrawer,
				_1: {ctor: '[]'}
			}
		},
		{
			header: _user$project$Main$header(model),
			drawer: _user$project$Main$drawer(model),
			tabs: {
				ctor: '_Tuple2',
				_0: {ctor: '[]'},
				_1: {ctor: '[]'}
			},
			main: {
				ctor: '::',
				_0: _user$project$Main$viewBody(model),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$subscriptions = function (model) {
	var fooRef = A2(
		_pairshaped$elm_firebase$Firebase_Database$ref,
		_elm_lang$core$Maybe$Just('foo'),
		model.db);
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(_debois$elm_mdl$Material_Layout$subs, _user$project$Main$Mdl, model.mdl),
			_1: {
				ctor: '::',
				_0: A3(_pairshaped$elm_firebase$Firebase_Database_Reference$on, 'value', fooRef, _user$project$Main$FooValue),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: {
			ctor: '_Tuple2',
			_0: _user$project$Main$initModel,
			_1: _debois$elm_mdl$Material_Layout$sub0(_user$project$Main$Mdl)
		},
		view: _user$project$Main$view,
		subscriptions: _user$project$Main$subscriptions,
		update: _user$project$Main$update
	})();
